{"version":3,"sources":["components/AddCategory.js","components/GridGiftItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GridGift.js","GifApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GridGiftItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","require","useEffect","GridGift","loading","state","setState","then","imgs","setTimeout","useFetchGifs","image","key","GifApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"uMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAkBzC,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,OAQd,4CACA,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBtB,SAACP,GAEnBF,EAAcE,EAAEQ,OAAOF,YCMZG,EAZM,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAIhC,OACI,yBAAKC,UAAU,4CACX,yBAAKC,IAAKF,EAAMG,IAAKJ,IACrB,2BAAKA,K,uBCTJK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDAEoBO,UAAUF,GAF9B,+DAGCG,MAAMR,GAHP,cAGhBS,EAHgB,gBAICA,EAASC,OAJV,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVhB,kBAcfY,GAde,4CAAH,sD,ECEWK,EAAQ,GAAhCjC,E,EAAAA,SAAUkC,E,EAAAA,UCyBHC,EAtBE,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,EDDP,SAAEA,GAAe,IAAD,EAChBrB,EAAS,CACjC2B,KAAM,GACNS,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAiC1C,OA1BAJ,GAAU,WACRd,EAAUC,GACDkB,MAAM,SAAAC,GAEHC,YAAY,WAGZH,EAAS,CACLX,KAAMa,EACNJ,SAAS,MAGV,UAEd,CAACf,IAYGgB,EC7B0BK,CAAarB,GAAjCU,EAHoB,EAGzBJ,KAAaS,EAHY,EAGZA,QAErB,OACE,oCACE,4BAAKf,GAEH,yBAAKJ,UAAU,iDACbmB,GAAW,uBAAGnB,UAAU,oCAAb,cAETc,EAAOF,KAAI,SAACc,GAAD,OACT,kBAAC,EAAD,eAAcC,IAAKD,EAAM7B,IAAQ6B,UCShCE,EAvBA,WAAO,IAAD,EAEmB7C,mBAAS,CAAC,cAF7B,mBAEV8C,EAFU,KAEE/C,EAFF,KAIjB,OACI,oCACI,uCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ+C,EAAWjB,KAAM,SAAAR,GAAQ,OACrB,kBAAC,EAAD,CACIuB,IAAMvB,EACNA,SAAWA,UCbvC0B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a0a07070.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategorias }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const inputChange = (e) => {\n    // console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 5) {\n      setCategorias((c) => [inputValue, ...c ]);\n      setInputValue('');\n    }else{\n        // console.log('L a categoria debe de ser mayor a 5 palabras')\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input type=\"text\" value={inputValue} onChange={inputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GridGiftItem = (  {id, title, url}  ) => {\n    \n    // console.log({id,title,url});\n    \n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={url}  alt={title}/>\n            <p>{ title }</p>\n        </div>\n    );\n};\n\nexport default GridGiftItem;","export const getGifts = async (category) => {\n  const url = \n  `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UOz8Y7mnABBRfGvxBB6X0howfl105SSs`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n//   console.log(gifs);\n  return gifs;\n};\n","import { getGifts } from \"../helpers/getGifs\";\n\nconst { useState, useEffect } = require(\"react\");\n\nexport const useFetchGifs = ( category ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  //   Esto es como el componentDidMount() -> clases\n  useEffect(() => {\n    getGifts( category )\n            .then( imgs => {\n                \n                setTimeout( () =>{\n\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n                }, 3000)\n            } )\n  }, [category]);\n\n//   setTimeout(() => {\n//     setState(\n//       {\n//         data: [1, 2, 3, 4, 5],\n//         loading: false,\n//       },\n//       3000\n//     );\n//   });\n\n  return state; // data:[], loading: true\n};\n","import React from \"react\";\nimport GridGiftItem from \"./GridGiftItem\";\n// import { getGifts } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nconst GridGift = ({ category }) => {\n  //   const [count, setCount] = useState(0);\n  // const [img, setImg] = useState([]);\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {\n        <div className=\"card-grid animate__animated animate__fadeInUp\">\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n          {\n            images.map((image) => (\n              <GridGiftItem key={image.id} {...image} />\n          ))\n        }\n        </div>\n      }\n    </>\n  );\n};\n\nexport default GridGift;\n\n// <h5>{count}</h5>\n// <button onClick={() => setCount(count + 1)}> + 1 </button>\n// img.map( ({id, title}) => (\n//     <h4 key={id}>{title}</h4>\n//   ))\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GridGift from \"./components/GridGift\";\n\nconst GifApp = () => {\n  \n    const [categorias, setCategorias] = useState(['One Piece']);\n\n    return(\n        <>\n            <h2>Gif App</h2>\n            <AddCategory setCategorias={setCategorias}/>\n            <hr/>\n            <ol>\n                {\n                    categorias.map ( category => (\n                        <GridGift \n                            key={ category }\n                            category={ category }\n                         />\n                    ))\n                }\n            </ol>\n        </>\n    );\n};\n\nexport default GifApp;\n\n\n\n//<button onClick={addElement}>Add</button>\n    // const addElement = (e) =>{\n    //     console.log(e);\n    //     // setCategorias([...categorias, 'Rayman']);\n    //     setCategorias(catgs => [...catgs, 'Rayman']);\n    // }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n  <GifApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}